unset SSH_ASKPASS

export BROWSER=$(which luakit)
export EDITOR='emacsclient -a vim -nw'
export PATH=$HOME/prefix/bin:$PATH
export PATH=$HOME/android-sdk/platform-tools:$PATH
export PATH=$HOME/android-sdk/tools:$PATH
export PATH=$PATH:$HOME/.cabal/bin:/opt/clean/bin
export PATH=$PATH:$HOME/anaconda3/bin
export PATH="$PATH:/opt/tee-clc-11.0.0"
export PATH="$PATH:~/.cargo/bin"
export PATH="$PATH:/opt/android-sdk/platform-tools/"
export PATH="/usr/local/heroku/bin:$PATH"

export RUST_SRC_PATH="$HOME/.multirust/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/"

alias open=xdg-open

function fb() {
    SETTERM=fbterm fbterm -n Terminus --font-size 14
}

function bin_exists () {
    type $1 > /dev/null 2>&1 || return 1
    return 0
}

function brightness () {
    sudo tee /sys/class/backlight/intel_backlight/brightness <<< $1
}

if bin_exists docker; then
    alias d=docker
    alias dps='docker ps -a'
fi

if bin_exists pacman; then
    alias update='sudo pacman -Syu'
    alias install='sudo pacman -Syu && sudo pacman -S --needed'
    alias search='pacman -Ss'

    function binaries () {
        pacman -Ql $1 | grep /usr/bin | awk '$0=$2' | cut -d'/' -f4- | awk '$0'
    }
elif bin_exists apt-get; then
    alias update='sudo apt-get update'
    alias install='sudo apt-get install'
    alias search='apt-cache search'
elif bin_exists pkg; then
    alias install='sudo pkg install'
    alias search='pkg search'
fi

if bin_exists notify-send; then
    alias alert="notify-send '$(ps -p $$ --no-headers -o comm,pid)'"
fi

function gh () {
    git clone "https://github.com/lennart96/$1"
}

alias ll='git log --decorate=short --format=oneline --abbrev-commit --graph'

# vim in shell

alias q=clear
alias :e="$EDITOR"
alias :q=exit
alias :t=file
alias :m="$EDITOR Makefile"
alias :r="make clean; make run"
alias e=:e
alias edit=:e
alias m=make
alias mr='clear;:r'

alias ls='ls --time-style=+"%Y-%m-%d %H:%M" --color=auto --group-directories-first'
alias grep='grep --color=auto'
alias cgrep='grep --color=always'
alias cls='ls --color=always'
alias cless='less -R'
alias l='ls -1 | grep -v "~"'

# human-friendly
alias free='free -m'
alias cp='cp -i'
alias df='df -h'

alias ipynb='ipython notebook'
alias ipy="ipython -i -c 'cd ~/Dropbox/ipython' --pylab --no-banner --no-confirm-exit --classic --autocall=1"

function c() {
    dir="$1"
    if [ "$dir" != "" ]; then
        ls -d "$dir" 2>&1 > /dev/null || mkdir "$dir"
        cd "$dir"
    else
        clear
        pwd
    fi
    ls -1t | head -n 10 | column
}

export HISTSIZE=20000

if [ -n "$ZSH_VERSION" ]; then

    # zsh

    setopt hist_ignore_space
    setopt interactive_comments
    setopt auto_pushd
    setopt glob_complete
    setopt append_history
    setopt short_loops
    setopt extended_history
    setopt hist_expire_dups_first
    unsetopt autocd
    unsetopt bg_nice
    setopt nomatch
    zstyle :compinstall filename '$HOME/.zshrc'

    autoload -U promptinit
    promptinit
    prompt off

    fpath+=~/.zfunc
    autoload -Uz compinit
    compinit

    HISTFILE=$HOME/.zsh_history
    export HISTSIZE=20000
    export SAVEHIST=15000

    setopt vi
    cdpath=( . ~/db ~/projects ~/Dropbox/uu ~ /usr)

    PROMPT='%(?.. -> %? 
)%{%4F%}%2~%{%f%}'
    TIMEFMT='%J  -- %E (%U+%S %Mkb %c+%w)'

    function ctrlp() {
        BUFFER="vim +':CtrlP'"
        zle accept-line
    }

    zle -N ctrlp

    bindkey '^P' ctrlp
    bindkey '^ ' list-choices
    bindkey '^n' menu-complete
    bindkey '^p' reverse-menu-complete

    bindkey '^k' up-line-or-search
    bindkey '^j' down-line-or-search

    if [ "x$SETTERM" != x ]
    then
        export TERM="$SETTERM"
    else
        export  TERM="linux"
    fi


elif [ -n "$BASH_VERSION" ]; then

    # bash

    export HISTFILESIZE=${HISTSIZE}
    export HISTCONTROL=ignoreboth

    PS1='\W\$ '

    EC () { echo -e ' -> '$?; }
    trap EC ERR
fi

# . ~/adf2014.10/adfrc.sh
